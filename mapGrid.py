from terrain import *

BOARDSIZEX = 13
BOARDSIZEY = 13

class MapGrid(object):
    '''
    classdocs
    '''
   

    def __init__(self, mapNumber):
        '''
        Constructor
        '''
        # initiate grid via list of lists
        self.myboard = []
                
        for numLoop in range(BOARDSIZEX):
            self.myboard.append([0,0,0,0,0,0,0,0,0,0,0,0,0])
            
        map = int(mapNumber)
        hard = []
        soft = []
        # load terrain to board
        
        
        # terrain map objects - co-ordinates
        # map 1
        if map == 1:
            hard = [[0,3],[0,4],[0,6],[0,8],[0,9],
                [1,1],[1,11],
                [2,3],[2,5],[2,7],[2,9],
                [3,0],[3,2],[3,3],[3,9],[3,10],[3,12],
                [4,0],[4,5],[4,7],[4,12],
                [5,2],[5,4],[5,5],[5,7],[5,8],[5,10],
                [6,0],[6,12],
                [7,2],[7,4],[7,5],[7,7],[7,8],[7,10],
                [8,0],[8,5],[8,7],[8,12],
                [9,0],[9,2],[9,3],[9,9],[9,10],[9,12],
                [10,3],[10,5],[10,7],[10,9],
                [11,1],[11,11],
                [12,3],[12,4],[12,6],[12,8],[12,9]]
        
            soft = [[0,2],[0,10],
                [1,4],[1,6],[1,8],
                [2,0],[2,2],[2,10],[2,12],
                [3,5],[3,7],
                [4,1],[4,6],[4,11],
                [5,3],[5,9],
                [6,1],[6,4],[6,6],[6,8],[6,11],
                [7,3],[7,9],
                [8,1],[8,6],[8,11],
                [9,5],[9,7],
                [10,0],[10,2],[10,10],[10,12],
                [11,4],[11,6],[11,8],
                [12,2],[12,10]]
        elif map == 2:
            hard = [[1,1],[1,5],[1,7],[1,11],
                [2,2],[2,3],[2,4],[2,5],[2,7],[2,8],[2,9],[2,10],
                [3,2],[3,10],
                [4,2],[4,4],[4,5],[4,7],[4,8],[4,10],[4,12],
                [5,1],[5,2],[5,4],[5,8],[5,10],[5,11],
                [6,6],
                [7,1],[7,2],[7,4],[7,7],[7,10],[7,11],
                [8,2],[8,4],[8,5],[8,7],[8,8],[8,10],
                [9,2],[9,10],
                [10,2],[10,3],[10,4],[10,5],[10,7],[10,8],[10,9],[10,10],
                [11,1],[11,5],[11,7],[11,11]]
                
            soft = [[0,2],[0,4],[0,6],[0,8],[0,10],
                [1,3],[1,9],
                [2,0],[2,6],[2,12],
                [3,1],[3,5],[3,7],[3,11],
                [4,0],[4,6],[4,12],
                [5,3],[5,5],[5,7],[5,9],
                [6,0],[6,2],[6,4],[6,8],[6,10],[6,12],
                [7,3],[7,5],[7,7],[7,9],
                [8,0],[8,6],[8,12],
                [9,1],[9,5],[9,7],[9,11],
                [10,0],[10,6],[10,12],
                [11,3],[11,9],
                [12,2],[12,4],[12,6],[12,8],[12,10]]
            
        elif map == 3:
            hard = [[1,1],[1,3],[1,5],[1,7],[1,9],[1,11],
                [3,1],[3,3],[3,5],[3,7],[3,9],[3,11],
                [5,1],[5,3],[5,5],[5,7],[5,9],[5,11],
                [7,1],[7,3],[7,5],[7,7],[7,9],[7,11],
                [9,1],[9,3],[9,5],[9,7],[9,9],[9,11],
                [11,1],[11,3],[11,5],[11,7],[11,9],[11,11],]
                
            soft = [[0,2],[0,4],[0,6],[0,8],[0,10],
                [2,0],[2,2],[2,4],[2,6],[2,8],[2,10],[2,12],
                [4,0],[4,2],[4,4],[4,6],[4,8],[4,10],[4,12],
                [6,0],[6,2],[6,4],[6,6],[6,8],[6,10],[6,12],
                [8,0],[8,2],[8,4],[8,6],[8,8],[8,10],[8,12],
                [10,0],[10,2],[10,4],[10,6],[10,8],[10,10],[10,12],
                [12,2],[12,4],[12,6],[12,8],[12,10]]    
        
        # load terrain to board
        for each in hard:
            self.myboard[each[0]][each[1]] = Terrain("hard")
        
        for each in soft:
            self.myboard[each[0]][each[1]] = Terrain("soft")
                
    
    # get the object in the grid reference
    def getGridObject(self, position, x, y):
        return self.myboard[position[0]+y][position[1]+x]
        
    # clear the objet in the grid reference
    def removeObject(self, position, x, y):
        self.myboard[position[0]+y][position[1]+x] = 0
        return 1